image: python:3.9

before_script:
  - echo $HOME
  - pip install .[dev]


stages:
  - test
  - release
  - post_release

unit-test:
  image: python:3.9
  stage: test
  script:
    - export GITLAB_CI=1
    - pytest -svvvrxX --cov=airflow_provider_kafka/ --cov-report=term --disable-pytest-warnings tests/unit
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  except:
    - tags

install-test:
  image: python:3.9
  stage: test
  script:
    - pip install .
  allow_failure: false
  except:
    - tags

release-test:
  image: python:3.9
  stage: release
  script:
    - pip install twine
    - echo "[distutils]" >> ~/.pypirc
    - echo "index-servers=" >> ~/.pypirc
    - echo "  testpypi" >> ~/.pypirc
    - echo "[testpypi]" >> ~/.pypirc
    - echo 'repository=https://test.pypi.org/legacy/' >> ~/.pypirc
    - echo 'username='$PYPI_USER >> ~/.pypirc
    - echo 'password='$PYPI_PASSWORD >> ~/.pypirc
    - python setup.py check sdist bdist_wheel
    - twine upload --repository testpypi dist/*
    - pip install --index-url https://test.pypi.org/simple/ angreal
    - echo "" > ~/.pypirc && rm ~/.pypirc
  allow_failure: true

release:
  image: python:3.9
  stage: release
  before_script:
    - VERSION=`python -c "import airflow_provider_kafka; print(airflow_provider_kafka.__version__)"`
    - if ! [[ "$CI_BUILD_TAG" = "$VERSION" ]]; then echo "$VERSION does not match $CI_BUILD_TAG"; exit -1 ; fi
  script:
    - pip install twine
    - pip install .[dev]
    - echo "[server-login]" >> ~/.pypirc
    - echo "repository=https://pypi.python.org/pypi" >> ~/.pypirc
    - echo "username="$PYPI_USER >> ~/.pypirc
    - echo "password="$PYPI_PASSWORD >> ~/.pypirc
    - python setup.py check sdist bdist_wheel
    - twine upload --repository pypi dist/*
    - echo "" > ~/.pypirc && rm ~/.pypirc
  only:
    - tags
  when:
    manual

cleanup_release:
  stage: release
  when: always
  script:
    - rm -vf ~/.pypirc
  only:
    - tags

